<?php


namespace {{namespace}}Traits;


use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;

trait HashPasswordTraits
{
    public array $hashed = [
        "password"
    ];

    protected static function bootHashPasswordTraits()
    {
        $hash = function (Model $model) {
            foreach ($this->hashed as $hash) {
                $model->{$hash} = Hash::make($model->{$hash} ?? Str::random(64));
            }
        };
        static::creating($hash);
        static::updating($hash);
    }

    public function compareAndUpdate(string $password)
    {
        return $this->compare($password) && $this->update([$this->getDefaultPasswordParameter() => $password]);
    }

    public function compare(string $password)
    {
        return Hash::check($password, $this->{$this->getDefaultPasswordParameter()});
    }

    public function getDefaultPasswordParameter(): string
    {
        return $this->hashed[0] ?? 'password';
    }
}
